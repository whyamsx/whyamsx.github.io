{"version":3,"sources":["mobx/AddUserModal.ts","mobx/Users.ts","components/DynamycHeader.tsx","mobx/EditUsersModal.ts","components/UsersList/EditUsersModal.tsx","components/UsersList/List.tsx","components/UsersList/AddUserModal.tsx","components/UsersList/UsersList.tsx","hooks/ucFirst.ts","components/User/Post.tsx","components/User/Posts.tsx","hooks/useRequest.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["visible","makeAutoObservable","this","value","DEFAULT_PHOTO_URI","users","_id","nickname","photo","postsCount","description","storageUsers","localStorage","getItem","JSON","parse","user","trim","length","message","error","push","Math","round","random","success","updateStorage","id","newData","map","stringify","setItem","ObserveHeader","observer","title","subtitle","hasBack","history","useHistory","Header","onBack","goBack","undefined","subTitle","styled","PageHeader","userData","EditUsersModalComponent","React","useState","userName","setUserName","userDescription","setUserDescription","useEffect","EditUsersModal","onOk","Users","editUser","setVisible","onCancel","okText","placeholder","prefix","UserOutlined","onChange","event","target","FileTextOutlined","style","marginTop","UsersList","document","getUsers","dataSource","renderItem","Item","actions","type","onClick","setUserData","handleOpenEditUserModal","component","Button","to","avatar","loading","active","Meta","src","AddUserModalComponent","AddUserModal","addUser","DynamycHeader","List","AddUserButton","content","toUpperCase","slice","ucFirst","bordered","width","border","marginBottom","borderRadius","props","userId","match","params","posts","setPosts","uri","fetch","then","response","json","post","index","Post","body","Spinner","size","Spin","App","Main","Content","path","exact","Posts","render","div","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7aae3d20.chunk.js","sourcesContent":["import { makeAutoObservable } from 'mobx'\r\n\r\nclass EditUsersModal {\r\n\tvisible: boolean = false\r\n\r\n\tconstructor() {\r\n\t\tmakeAutoObservable(this)\r\n\t}\r\n\r\n\tsetVisible(value: boolean) {\r\n\t\tthis.visible = value\r\n\t}\r\n}\r\n\r\nexport default new EditUsersModal()\r\n","import { makeAutoObservable } from 'mobx'\r\nimport { message } from 'antd'\r\n\r\nconst DEFAULT_PHOTO_URI = 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png'\r\n\r\nclass Users {\r\n\tprivate users: IUser[] = [\r\n\t\t{ _id: 0, nickname: 'jasonnn', photo: DEFAULT_PHOTO_URI, postsCount: 4, description: '' },\r\n\t\t{ _id: 1, nickname: 'mary_23', photo: DEFAULT_PHOTO_URI, postsCount: 9, description: 'love babys â™¡' },\r\n\t\t{ _id: 2, nickname: 'bob_ic', photo: DEFAULT_PHOTO_URI, postsCount: 15, description: '' },\r\n\t]\r\n\r\n\tconstructor() {\r\n\t\tmakeAutoObservable(this)\r\n\t\tconst storageUsers = localStorage.getItem('users')\r\n\t\tif (storageUsers) {\r\n\t\t\tthis.users = JSON.parse(storageUsers) as IUser[]\r\n\t\t}\r\n\t}\r\n\r\n\tgetUsers() {\r\n\t\treturn this.users\r\n\t}\r\n\r\n\taddUser(user: Omit<IUser, '_id' | 'photo' | 'postsCount'>) {\r\n\t\tif (!user.nickname.trim()) return message.error('Blank username')\r\n\t\tif (user.nickname.trim() && user.nickname.length < 3) return message.error('Username must contain at least 3 characters')\r\n\r\n\t\tthis.users.push({\r\n\t\t\t_id: this.users.length,\r\n\t\t\t...user,\r\n\t\t\tphoto: DEFAULT_PHOTO_URI,\r\n\t\t\tpostsCount: Math.round(1 - 0.5 + Math.random() * (20 - 1 + 1)),\r\n\t\t})\r\n\t\tmessage.success(`User \"${user.nickname}\" added successfully`)\r\n\r\n\t\tthis.updateStorage()\r\n\t}\r\n\r\n\teditUser(id: number, newData: IUser) {\r\n\t\tif (newData.nickname.trim() && newData.nickname.length < 3) return message.error('Username must contain at least 3 characters')\r\n\r\n\t\tthis.users = this.users.map(user => {\r\n\t\t\tif (user._id === id) {\r\n\t\t\t\tmessage.success(`User data \"${user.nickname}\" changed`)\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...newData,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn user\r\n\t\t})\r\n\r\n\t\tthis.updateStorage()\r\n\t}\r\n\r\n\tprivate updateStorage() {\r\n\t\tconst storageUsers = localStorage.getItem('users')\r\n\t\tif (storageUsers !== JSON.stringify(this.users)) {\r\n\t\t\tlocalStorage.setItem('users', JSON.stringify(this.users))\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default new Users()\r\n","import { observer } from 'mobx-react-lite'\r\nimport styled from 'styled-components'\r\nimport { PageHeader } from 'antd'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\ninterface Props {\r\n\ttitle: string\r\n\tsubtitle?: string\r\n\thasBack?: boolean\r\n}\r\n\r\nconst ObserveHeader = observer(({ title, subtitle, hasBack }: Props) => {\r\n\tconst history = useHistory()\r\n\treturn <Header onBack={hasBack ? () => history.goBack() : undefined} title={title} subTitle={subtitle || ''} />\r\n})\r\n\r\nconst Header = styled(PageHeader)`\r\n\twidth: 700px;\r\n`\r\n\r\nexport default ObserveHeader\r\n","import { makeAutoObservable } from 'mobx'\r\n\r\nclass EditUsersModal {\r\n\tvisible: boolean = false\r\n\tuserData?: IUser = undefined\r\n\r\n\tconstructor() {\r\n\t\tmakeAutoObservable(this)\r\n\t}\r\n\r\n\tsetVisible(value: boolean) {\r\n\t\tthis.visible = value\r\n\t}\r\n\r\n\tsetUserData(value: IUser) {\r\n\t\tthis.userData = value\r\n\t}\r\n}\r\n\r\nexport default new EditUsersModal()\r\n","import React from 'react'\r\nimport Users from '../../mobx/Users'\r\nimport EditUsersModal from '../../mobx/EditUsersModal'\r\nimport { observer } from 'mobx-react-lite'\r\n\r\nimport { Modal, Input } from 'antd'\r\nimport { UserOutlined, FileTextOutlined } from '@ant-design/icons'\r\n\r\nconst EditUsersModalComponent = observer(() => {\r\n\tconst [userName, setUserName] = React.useState<string>('')\r\n\tconst [userDescription, setUserDescription] = React.useState<string>('')\r\n\r\n\tReact.useEffect(() => {\r\n\t\tif (EditUsersModal.userData) {\r\n\t\t\tsetUserName(EditUsersModal.userData.nickname)\r\n\t\t\tsetUserDescription(EditUsersModal.userData.description)\r\n\t\t}\r\n\t}, [EditUsersModal.userData])\r\n\r\n\tconst handleChangeUserName = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetUserName(event.target.value)\r\n\t}\r\n\tconst handleChangeUserDescription = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetUserDescription(event.target.value)\r\n\t}\r\n\r\n\tconst handleOnCancel = () => {\r\n\t\tEditUsersModal.setVisible(false)\r\n\t}\r\n\r\n\tconst handleOnOk = () => {\r\n\t\tUsers.editUser(EditUsersModal.userData!._id, {\r\n\t\t\t...(EditUsersModal.userData as IUser),\r\n\t\t\tnickname: userName,\r\n\t\t\tdescription: userDescription,\r\n\t\t})\r\n\r\n\t\tEditUsersModal.setVisible(false)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Modal\r\n\t\t\ttitle={`Edit ${EditUsersModal.userData?.nickname}'s data`}\r\n\t\t\tvisible={EditUsersModal.visible}\r\n\t\t\tonOk={handleOnOk}\r\n\t\t\tonCancel={handleOnCancel}\r\n\t\t\tokText=\"Save\"\r\n\t\t>\r\n\t\t\t<Input placeholder=\"username\" prefix={<UserOutlined />} onChange={handleChangeUserName} value={userName} />\r\n\t\t\t<Input\r\n\t\t\t\tplaceholder=\"title\"\r\n\t\t\t\tprefix={<FileTextOutlined />}\r\n\t\t\t\tonChange={handleChangeUserDescription}\r\n\t\t\t\tvalue={userDescription}\r\n\t\t\t\tstyle={{ marginTop: 8 }}\r\n\t\t\t/>\r\n\t\t</Modal>\r\n\t)\r\n})\r\n\r\nexport default EditUsersModalComponent\r\n","import React from 'react'\r\nimport Users from '../../mobx/Users'\r\nimport EditUsersModal from '../../mobx/EditUsersModal'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { Empty, List, Avatar, Button, Skeleton } from 'antd'\r\nimport EditUserModal from './EditUsersModal'\r\n\r\nconst UsersList = observer(() => {\r\n\tdocument.title = 'Users'\r\n\r\n\tconst users = Users.getUsers()\r\n\tconst handleOpenEditUserModal = (user: IUser) => {\r\n\t\tEditUsersModal.setUserData(user)\r\n\t\tEditUsersModal.setVisible(true)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{users.length ? (\r\n\t\t\t\t<List\r\n\t\t\t\t\tdataSource={users}\r\n\t\t\t\t\trenderItem={user => (\r\n\t\t\t\t\t\t<List.Item\r\n\t\t\t\t\t\t\tactions={[\r\n\t\t\t\t\t\t\t\t<Button type=\"ghost\" key=\"edit\" onClick={() => handleOpenEditUserModal(user)}>\r\n\t\t\t\t\t\t\t\t\tEdit\r\n\t\t\t\t\t\t\t\t</Button>,\r\n\t\t\t\t\t\t\t\t<Link component={Button} to={`/u${user._id}`} type=\"ghost\" key=\"more\">\r\n\t\t\t\t\t\t\t\t\tMore {'>>'}\r\n\t\t\t\t\t\t\t\t</Link>,\r\n\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Skeleton avatar title={false} loading={false} active>\r\n\t\t\t\t\t\t\t\t<List.Item.Meta\r\n\t\t\t\t\t\t\t\t\tavatar={<Avatar src={user.photo} />}\r\n\t\t\t\t\t\t\t\t\ttitle={<Link to={`/u${user._id}`}>@{user.nickname}</Link>}\r\n\t\t\t\t\t\t\t\t\tdescription={user.description}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<div>Posts: {user.postsCount}</div>\r\n\t\t\t\t\t\t\t</Skeleton>\r\n\t\t\t\t\t\t</List.Item>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\t<Empty />\r\n\t\t\t)}\r\n\r\n\t\t\t<EditUserModal />\r\n\t\t</>\r\n\t)\r\n})\r\n\r\nexport default UsersList\r\n","import React from 'react'\r\nimport Users from '../../mobx/Users'\r\nimport AddUserModal from '../../mobx/AddUserModal'\r\nimport { observer } from 'mobx-react-lite'\r\n\r\nimport { Modal, message, Input } from 'antd'\r\nimport { UserOutlined, FileTextOutlined } from '@ant-design/icons'\r\n\r\nconst AddUserModalComponent = observer(() => {\r\n\tconst [userName, setUserName] = React.useState<string>('')\r\n\tconst [userDescription, setUserDescription] = React.useState<string>('')\r\n\r\n\tReact.useEffect(() => {\r\n\t\tsetUserName('')\r\n\t\tsetUserDescription('')\r\n\t}, [AddUserModal.visible])\r\n\r\n\tconst handleChangeUserName = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetUserName(event.target.value)\r\n\t}\r\n\tconst handleChangeUserDescription = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetUserDescription(event.target.value)\r\n\t}\r\n\r\n\tconst handleOnCancel = () => {\r\n\t\tAddUserModal.setVisible(false)\r\n\t}\r\n\r\n\tconst handleOnOk = () => {\r\n\t\tUsers.addUser({\r\n\t\t\tnickname: userName,\r\n\t\t\tdescription: userDescription,\r\n\t\t})\r\n\r\n\t\tAddUserModal.setVisible(false)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Modal title=\"Add new user\" visible={AddUserModal.visible} onOk={handleOnOk} onCancel={handleOnCancel} okText=\"Add\">\r\n\t\t\t<Input placeholder=\"username\" prefix={<UserOutlined />} onChange={handleChangeUserName} value={userName} />\r\n\t\t\t<Input\r\n\t\t\t\tplaceholder=\"title\"\r\n\t\t\t\tprefix={<FileTextOutlined />}\r\n\t\t\t\tonChange={handleChangeUserDescription}\r\n\t\t\t\tvalue={userDescription}\r\n\t\t\t\tstyle={{ marginTop: 8 }}\r\n\t\t\t/>\r\n\t\t</Modal>\r\n\t)\r\n})\r\n\r\nexport default AddUserModalComponent\r\n","import React from 'react'\r\nimport AddUserModal from '../../mobx/AddUserModal'\r\nimport Users from '../../mobx/Users'\r\n\r\nimport styled from 'styled-components'\r\nimport { Button } from 'antd'\r\nimport DynamycHeader from '../DynamycHeader'\r\n\r\nimport List from './List'\r\nimport AddUserModalComponent from './AddUserModal'\r\n\r\nexport default function () {\r\n\tconst handleAddUserModal = () => {\r\n\t\tAddUserModal.setVisible(true)\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<DynamycHeader title={`Users`} subtitle={`(${Users.getUsers().length})`} />\r\n\t\t\t<List />\r\n\t\t\t<AddUserButton type=\"primary\" onClick={handleAddUserModal}>\r\n\t\t\t\tAdd user\r\n\t\t\t</AddUserButton>\r\n\t\t\t<AddUserModalComponent />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst AddUserButton = styled(Button)`\r\n\tmargin-top: 8px;\r\n`\r\n","export default function (content: string) {\r\n\tif (!content) return content\r\n\r\n\treturn content[0].toUpperCase() + content.slice(1)\r\n}\r\n","import React from 'react'\r\nimport { Card } from 'antd'\r\nimport ucFirst from '../../hooks/ucFirst'\r\n\r\ninterface Props {\r\n\ttitle: string\r\n\tcontent: string\r\n}\r\n\r\nexport default function ({ title, content }: Props) {\r\n\treturn (\r\n\t\t<Card title={ucFirst(title)} bordered={false} style={{ width: '100%', border: '1px solid #eeeeee', marginBottom: 8, borderRadius: 12 }}>\r\n\t\t\t<p>{ucFirst(content)}.</p>\r\n\t\t</Card>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport useRequest from '../../hooks/useRequest'\r\nimport { RouteComponentProps } from 'react-router'\r\nimport { Spin } from 'antd'\r\nimport { Empty } from 'antd'\r\n\r\nimport Users from '../../mobx/Users'\r\nimport Post from './Post'\r\nimport DynamycHeader from '../DynamycHeader'\r\nimport styled from 'styled-components'\r\n\r\ninterface MatchParams {\r\n\tuserId: string\r\n}\r\n\r\ninterface IGetPosts {\r\n\tuserId: number\r\n\tid: number\r\n\ttitle: string\r\n\tbody: string\r\n}\r\n\r\nexport default function (props: RouteComponentProps<MatchParams>) {\r\n\tconst userId = +props.match.params.userId\r\n\tconst user = Users.getUsers()[userId]\r\n\tconst [posts, setPosts] = React.useState<IGetPosts[]>()\r\n\r\n\tReact.useEffect(() => {\r\n\t\tuseRequest<IGetPosts[]>(`https://jsonplaceholder.typicode.com/posts?userId=${userId + 1}`).then(posts => {\r\n\t\t\tsetPosts(posts)\r\n\t\t})\r\n\t}, [])\r\n\r\n\tif (!posts) return <Spinner size=\"large\" />\r\n\tif (!posts.length || !user) return <Empty />\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<DynamycHeader title={`@${user.nickname}'s posts`} hasBack subtitle={`(${posts.length})`} />\r\n\t\t\t{posts.map((post, index) => {\r\n\t\t\t\treturn <Post key={post.id} title={post.title} content={post.body} />\r\n\t\t\t})}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst Spinner = styled(Spin)`\r\n\tpadding: 80px 0;\r\n\twidth: 100%;\r\n`\r\n","export default function useRequest<T>(uri: string): Promise<T> {\r\n\treturn fetch(uri).then(response => response.json())\r\n}\r\n","import React from 'react'\nimport styled from 'styled-components'\nimport { HashRouter, Route, Switch } from 'react-router-dom'\n\nimport UsersList from './components/UsersList/UsersList'\nimport Posts from './components/User/Posts'\n\nexport default function App() {\n\treturn (\n\t\t<Main>\n\t\t\t<Content>\n\t\t\t\t<HashRouter>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/\" exact component={UsersList} />\n\t\t\t\t\t\t<Route path=\"/u:userId\" component={Posts} />\n\t\t\t\t\t\t<Route render={() => <>Not found</>} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</HashRouter>\n\t\t\t</Content>\n\t\t</Main>\n\t)\n}\n\nconst Main = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\theight: 100vh;\n`\nconst Content = styled.div`\n\twidth: 700px;\n\tflex-grow: 1;\n\tpadding: 20px;\n`\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry)\n\t\t\tgetFID(onPerfEntry)\n\t\t\tgetFCP(onPerfEntry)\n\t\t\tgetLCP(onPerfEntry)\n\t\t\tgetTTFB(onPerfEntry)\n\t\t})\n\t}\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport 'antd/dist/antd.css'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}